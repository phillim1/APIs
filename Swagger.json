{
  "swagger": "2.0",
  "info": {
    "version": "1.2.1",
    "title": "Import Letter Of Credit",
    "description": "Import Letter of Credit (ILC) is an undertaking to pay issued by a bank on behalf of its corporate customer (an importer) to a beneficiary (an exporter) for procured goods or services. A payment is released to the exporter against a presentation of specified documentation and in accordance with the terms of the transaction.\n\nThe ILC reflects the transaction from the perspective of an importer (the ILC applicant) and the importer's bank, typically known as the issuing bank.\n\n'Issuance' is the initial event that creates the master ILC transaction. This event could only be created once per ILC. If changes to the basic details of the ILC are needed, an 'Amend' event could be entered. Once the beneficiary submits their documents and claims the payment, a 'Claim Received' event is created. A claim could be continued in an 'Outstanding Claim' event if it is not completed in a single event. The 'Amend' and 'Claim Received' events can be created multiple times and at any point in the ILC lifecycle prior to its expiry.\n\nThere are two kinds of IDs in this API: id and masterId. The id is the identifier returned for events such as 'Issuance', 'Amendment' and 'Claim Received'. The masterId is the identifier returned for the ILC master and it is created together with the 'Issuance' event. A master ILC transaction can have one 'Issuance' event and multiple 'Amendment', 'Claim Received' and 'Outstanding Claim' events.\n\nNotifications are sent when the transaction is either awaiting response or authorised. The notification contains the id and masterId which could be used to retrieve details on the transaction.\n",
    "x-finastra-audience": "PUBLIC",
    "x-finastra-implementability": "RESTRICTED",
    "x-finastra-category": "Corporate Banking",
    "x-finastra-channel-type": "B2B",
    "x-finastra-maturity-level": "BETA",
    "x-finastra-short-description": "Perform multiple Import Letter of Credit events such as Issuance, Amendment and Claim Received, and retrieve corresponding details",
    "x-finastra-subcategory": "Trade and Supply Chain Finance",
    "x-finastra-tags": [
      "Fusion Trade Innovation",
      "Trade Finance",
      "Letter of Credit"
    ],
    "x-finastra-icon": "Icons_11n.svg"
  },
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "tokenUrl": "https://any.local.keycloak:8443/login/v1/sandbox/auth",
      "flow": "application"
    }
  },
  "security": [
    {
      "Oauth2": []
    }
  ],
  "tags": [
    {
      "name": "Issuances",
      "description": "An import letter of credit issuance event allows you, as the issuing bank, to initiate an import letter of credit in response to the receipt of an application from an importer, who is usually a customer of your bank or the bank of the importer."
    },
    {
      "name": "Amendments",
      "description": "A letter of credit can be amended using an Amend event at any time between the release of the Issuance event that created it and book-off event. Typically, an amendment will be initiated by the issuing bank at the request of the applicant. The issuing bank then passes details of the amendment on to the next bank in the processing chain, which will record the details and then inform the next advising bank or the beneficiary, as appropriate."
    },
    {
      "name": "Claims Received",
      "description": "Claim received event allows the user to log information about an initial claim made by the presenter and to record the receipt of documents. This event could be closed with or without making payment whilst awaiting documents or responses to inquiries."
    },
    {
      "name": "Outstanding Claims",
      "description": "The Outstanding Claim event, which allows you as the issuing bank to continue processing a claim, initiated by a Claim Received event in order to enter details of documents subsequently received or of a response from the applicant. In case of protracted correspondence with the applicant or the presenter, any number of Outstanding Claim events can be created, with the final event actually making the payment or rejecting the claim. A letter of credit may have more than one Claim Received event, and each Claim Received event may have several Outstanding Claim events associated with it. However, only one Outstanding Claim event can be in progress for each claim at any one time."
    },
    {
      "name": "Master Transaction",
      "description": "Master Transaction lists the most recent authorized and saved details of the LC. This API should only be used after authorization of the issuance event."
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/import-letter-of-credit/issuances": {
      "post": {
        "tags": [
          "Issuances"
        ],
        "summary": "Issue an import letter of credit",
        "description": "This call posts an import letter of credit master transaction and issuance event in FTI.",
        "operationId": "createILCIssuance",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "New import letter of credit issuance",
            "schema": {
              "$ref": "#/definitions/ILCIssuanceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Import letter of credit issuance was created successfully",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI for the created resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/ILCIssuance"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/import-letter-of-credit/issuances/{id}": {
      "get": {
        "tags": [
          "Issuances"
        ],
        "summary": "Get import letter of credit issuance by id",
        "description": "Returns a single import letter of credit issuance",
        "operationId": "getILCIssuanceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of import letter of credit issuance to return",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success in getting import letter of credit issuance by ID",
            "schema": {
              "$ref": "#/definitions/ILCIssuance"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Issuances"
        ],
        "summary": "Update an issuance of an import letter of credit",
        "description": "Update an import letter of credit issuance event by ID that is in exchange step in FTI, awaiting a response. This could only be used for issuance events in FTI that are in exchange step.",
        "operationId": "updateILCIssuanceById",
        "parameters": [
          {
            "in": "header",
            "name": "X-External-Context-ID",
            "description": "An encoded string that contains the details of an ILC issuance transaction that is waiting for a response from the external system. This field is only supplied in the ILC Events API where the user must subscribe to.",
            "required": true,
            "type": "string",
            "maxLength": 1000
          },
          {
            "in": "body",
            "name": "body",
            "description": "ILC Issue deferred response body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ILCIssuanceRequest"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id of the import letter of credit to be updated",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success in getting import letter of credit issuance by ID",
            "schema": {
              "$ref": "#/definitions/ILCIssuance"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/import-letter-of-credit/amendments": {
      "post": {
        "tags": [
          "Amendments"
        ],
        "summary": "Amend an import letter of credit",
        "description": "Creates an amend event in an import letter of credit in FTI. Entered data using this API will be the new and valid values to be saved in the transaction. If nothing is entered in a field, the value from the issuance event or the previous amend event will be retained.",
        "operationId": "createILCAmendment",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "New import letter of credit amendment",
            "schema": {
              "$ref": "#/definitions/ILCAmendmentRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Import letter of credit amendment was created successfully",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI for the created resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/ILCAmendment"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/import-letter-of-credit/amendments/{id}": {
      "get": {
        "tags": [
          "Amendments"
        ],
        "summary": "Get Import Letter of Credit - Amendment by ID",
        "description": "Returns a single import letter of credit amendment using the provided id.",
        "operationId": "getILCAmendmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of import letter of credit amendment to return",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success in getting import letter of credit amendments by LC ID",
            "schema": {
              "$ref": "#/definitions/ILCAmendment"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Amendments"
        ],
        "summary": "Edit an amendment of an import letter of credit",
        "description": "Update an import letter of credit amend event by ID that is in exchange step in FTI, awaiting a deferred response. This could only be used for amend events in FTI that are in exchange step.",
        "operationId": "updateILCAmendmentById",
        "parameters": [
          {
            "in": "header",
            "name": "X-External-Context-ID",
            "description": "An encoded string that contains the details of an ILC amendment transaction that is waiting for a response from the external system. This field is only supplied in the ILC Events API where the user must subscribe to.",
            "required": true,
            "type": "string",
            "maxLength": 1000
          },
          {
            "in": "body",
            "name": "body",
            "description": "ILC Amendment deferred response body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ILCAmendmentRequest"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id of the amendment of the import letter of credit to be updated",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success in updating import letter of credit amendment by Id",
            "schema": {
              "$ref": "#/definitions/ILCAmendment"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/import-letter-of-credit/claims-received": {
      "post": {
        "tags": [
          "Claims Received"
        ],
        "summary": "Claims received of an import letter of credit",
        "description": "Creates a claims received event in FTI, recording the receipt of documents and logging information about the initial claim made by the presenter.",
        "operationId": "createILCClaim",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "New import letter of credit claim received",
            "schema": {
              "$ref": "#/definitions/ILCClaimRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Import letter of credit claim received was created successfully",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI for the created resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/ILCClaim"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/import-letter-of-credit/claims-received/{id}": {
      "get": {
        "tags": [
          "Claims Received"
        ],
        "summary": "Get Import Letter or Credit - Claim received by ID",
        "description": "Returns a single claim received in an ILC by id.",
        "operationId": "getILCClaimById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of import letter of credit claim received to return",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success in getting import letter of credit claim received",
            "schema": {
              "$ref": "#/definitions/ILCClaim"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Claims Received"
        ],
        "summary": "Update a claim received of an import letter of credit",
        "description": "Update an import letter of credit claims received event by ID that is in exchange step in FTI, awaiting a deferred response. This could only be used for claims received events in FTI that are in exchange step.",
        "operationId": "updateILCClaimById",
        "parameters": [
          {
            "in": "header",
            "name": "X-External-Context-ID",
            "description": "An encoded string that contains the details of an ILC claims received transaction that is waiting for a response from the external system. This field is only supplied in the ILC Events API where the user must subscribe to.",
            "required": true,
            "type": "string",
            "maxLength": 1000
          },
          {
            "in": "body",
            "name": "body",
            "description": "ILC Claims received deferred response body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ILCClaimRequest"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the import letter of credit",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Update Success",
            "schema": {
              "$ref": "#/definitions/ILCClaim"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/import-letter-of-credit/outstanding-claims": {
      "post": {
        "tags": [
          "Outstanding Claims"
        ],
        "summary": "Outstanding claim of an import letter of credit",
        "description": "Creates an outstanding claim event in FTI, continuing the processing of a claim initiated by a Claim Received event.",
        "operationId": "createILCOutstanding",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "New import letter of credit outstanding claim",
            "schema": {
              "$ref": "#/definitions/ILCOutstandingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Import letter of credit outstanding claim was created successfully",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI for the created resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/ILCOutstanding"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      }
    },
    "/import-letter-of-credit/outstanding-claims/{id}": {
      "get": {
        "tags": [
          "Outstanding Claims"
        ],
        "summary": "Get Import Letter or Credit - Outstanding claim by ID",
        "description": "Returns a single outstanding claim in an ILC by id.",
        "operationId": "getILCOutstandingById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of import letter of credit outstanding claim to return",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Success in getting import letter of credit outstanding claim",
            "schema": {
              "$ref": "#/definitions/ILCOutstanding"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Outstanding Claims"
        ],
        "summary": "Update an outstanding claim of an import letter of credit",
        "description": "Update an import letter of credit outstanding claim event by ID that is in exchange step in FTI, awaiting a deferred response. This could only be used for outstanding claim events in FTI that are in exchange step.",
        "operationId": "updateILCOutstandingById",
        "parameters": [
          {
            "in": "header",
            "name": "X-External-Context-ID",
            "description": "An encoded string that contains the details of an ILC outstanding claim transaction that is waiting for a response from the external system. This field is only supplied in the ILC Events API where the user must subscribe to.",
            "required": true,
            "type": "string",
            "maxLength": 1000
          },
          {
            "in": "body",
            "name": "body",
            "description": "ILC Outstanding claim deferred response body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ILCOutstandingRequest"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the import letter of credit",
            "required": true,
            "type": "string",
            "maxLength": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Update Success",
            "schema": {
              "$ref": "#/definitions/ILCOutstanding"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/import-letter-of-credit/master/{masterId}": {
      "get": {
        "tags": [
          "Master Transaction"
        ],
        "summary": "Get Import Letter of Credit Master by ID",
        "description": "Returns a single import letter of credit master using the provided master-id.",
        "operationId": "getILCMasterById",
        "parameters": [
          {
            "name": "masterId",
            "in": "path",
            "description": "ID of import letter of credit master to return",
            "required": true,
            "type": "string",
            "maxLength": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Success in getting import letter of credit master by ID",
            "schema": {
              "$ref": "#/definitions/ILCMaster"
            }
          },
          "400": {
            "description": "Client Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "404": {
            "description": "Record Not Found",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Problem"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "EventIdentity": {
      "type": "object",
      "title": "Event Identity",
      "description": "Unique identifier of the event transaction",
      "properties": {
        "id": {
          "description": "The unique identifier of the import letter of credit event transaction - auto generated in TI.",
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "example": "MBWW-403-1123"
        }
      }
    },
    "MasterIdentity": {
      "type": "object",
      "title": "Master Identity",
      "description": "Unique identifier of the LC master transaction",
      "properties": {
        "masterId": {
          "description": "The unique identifier of the import letter of credit master transaction - auto generated in TI.",
          "type": "string",
          "minLength": 1,
          "maxLength": 10,
          "example": "403"
        }
      }
    },
    "MasterReference": {
      "type": "object",
      "title": "Master Reference",
      "description": "The generated reference of the master transaction in FTI",
      "properties": {
        "owningTransactionBankReference": {
          "description": "Bank's Master reference for this transaction. The value returned by FTI for this field could change if Master status is set to Pending.",
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "example": "ILC/BWW/11/0003"
        }
      }
    },
    "MasterStatus": {
      "type": "object",
      "title": "Master Status",
      "description": "Status of the Letter of Credit master transaction",
      "properties": {
        "masterStatus": {
          "description": "The status of the LC master transaction.",
          "type": "string",
          "enum": [
            "BOOKED-OFF",
            "CANCELLED",
            "EXPIRED",
            "ACTIVE",
            "PROVISIONAL",
            "PENDING"
          ],
          "example": "ACTIVE"
        }
      }
    },
    "EventStatus": {
      "type": "object",
      "title": "Event Status",
      "description": "Status of the Letter of Credit event transaction",
      "properties": {
        "eventStatus": {
          "description": "The status of the LC event transaction.",
          "type": "string",
          "enum": [
            "IN-PROGRESS",
            "COMPLETED",
            "ABORTED"
          ],
          "example": "COMPLETED"
        }
      }
    },
    "ActionItem": {
      "type": "object",
      "title": "Action Item",
      "description": "The details of any key instructions or data from the client relating to the transaction that needs attention from the bank users. ",
      "properties": {
        "messageData": {
          "type": "string",
          "description": "Message data of the instruction or information from the client that needs attention from the bank users.",
          "maxLength": 32700,
          "example": "Finance details have been arranged for this transaction. Contact the Finance department with reference 09020019-001 for further information"
        },
        "messageDescription": {
          "type": "string",
          "description": "Message description of the instruction or classification of the data that needs attention from the bank users.",
          "maxLength": 50,
          "example": "Input action required"
        },
        "messageInfo": {
          "type": "string",
          "description": "Additional information to be displayed in the notification",
          "maxLength": 222,
          "example": "'Document cross-check done by J.D.' "
        },
        "messageNumber": {
          "type": "string",
          "description": "Free format message number or identifier of the notification that could be set by the client.",
          "maxLength": 10,
          "example": "00001"
        },
        "actioned": {
          "type": "boolean",
          "description": "Identifies whether the notification or instruction has been actioned by the client."
        }
      }
    },
    "Attachment": {
      "type": "object",
      "title": "Attachment",
      "description": "The documents received in this transaction. ",
      "properties": {
        "docId": {
          "description": "The reference id of the document in the DMS. Mandatory only when a document related to this transaction has been uploaded in TI via API. This is the response returned by API Document Management.",
          "type": "string",
          "maxLength": 128,
          "example": "2db21a8369c5a681:-71ad7f86:16c761b7eb6:-7d02"
        },
        "dmsId": {
          "description": "The reference id of the set Document Management System in FTI. Mandatory only when a document related to this transaction has been uploaded in TI via API. If internal DMS is used, the accepted and returned value by API Document Management is FTIDMS. This is the response returned by API Document Management.",
          "type": "string",
          "maxLength": 35,
          "example": "MBWWDMS"
        },
        "docType": {
          "description": "The document type code. This must match one of the bank defined document types in the system. For examples, BOL stands for Bill of Lading, BOE for Bill of Exchange and GEN for General.",
          "type": "string",
          "maxLength": 3,
          "example": "BOL"
        },
        "description": {
          "description": "Description of the document",
          "type": "string",
          "maxLength": 35,
          "example": "Bill of Lading for ILC001"
        },
        "isBankDocInternal": {
          "description": "Identifies if attachment is internal to bank or not",
          "type": "boolean"
        },
        "batchId": {
          "description": "The batch identifier of the document",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "Charge": {
      "type": "object",
      "title": "Charge",
      "description": "The charge details of the transaction. ",
      "properties": {
        "issuanceChargesPayableBy": {
          "description": "The party - the beneficiary or the applicant - responsible for paying issuing bank's charges.",
          "type": "string",
          "default": "APPLICANT",
          "enum": [
            "APPLICANT",
            "BENEFICIARY"
          ]
        },
        "taxPayableBy": {
          "description": "The party - your customer or the party liable for charges - responsible for paying any tax due on the letter of credit or its charges",
          "type": "string",
          "default": "CHARGE-PAYER",
          "enum": [
            "CHARGE-PAYER",
            "CUSTOMER"
          ]
        },
        "overseasChargesPayableBy": {
          "description": "The party - the beneficiary or the applicant - responsible for paying your overseas charges",
          "type": "string",
          "default": "BENEFICIARY",
          "enum": [
            "APPLICANT",
            "BENEFICIARY"
          ]
        },
        "narrative": {
          "description": "Any additional information concerning charges",
          "type": "string",
          "maxLength": 222
        },
        "preferredCurrency": {
          "description": "The currency in which your bank's own charges will be collected. If you leave this field blank, the system uses the currency of the letter of credit. Where the charges are for the applicant, the setting here is overridden by the applicant's preferred currency. Follows ISO 4217 Alpha 3 currency code.",
          "pattern": "[A-Z]{3,3}",
          "type": "string",
          "example": "USD"
        },
        "accountNumber": {
          "description": "The bank account number from which charges are to be taken",
          "type": "string",
          "maxLength": 34,
          "example": "3129093288"
        },
        "deferCharges": {
          "type": "boolean",
          "default": true,
          "description": "Specify whether your own charges are to be collected now or deferred until payment"
        }
      }
    },
    "Narrative": {
      "type": "object",
      "title": "Narrative",
      "description": "The narratives of the letter of credit.",
      "properties": {
        "goodsDescription": {
          "description": "The description of the goods being delivered under the terms of the letter of credit",
          "type": "string",
          "maxLength": 53600
        },
        "documentsRequired": {
          "description": "The description of documents required to support the transaction",
          "type": "string",
          "maxLength": 53600
        },
        "additionalConditions": {
          "description": "Additional conditions of the transaction. This field may also be used to specify the details of a conditional transhipment and partial shipment",
          "type": "string",
          "maxLength": 53600
        },
        "specialPaymentConditionsForBeneficiary": {
          "description": "The special conditions applicable for the beneficiary, for example, post financing request or conditions.",
          "type": "string",
          "maxLength": 53600
        },
        "specialPaymentConditionsForReceivingBank": {
          "description": "The special payment conditions applicable for the receiving bank without disclosure to the beneficiary.",
          "type": "string",
          "maxLength": 53600
        }
      }
    },
    "Shipment": {
      "type": "object",
      "title": "Shipment",
      "description": "The shipment details of the letter of credit.",
      "properties": {
        "from": {
          "description": "The place of dispatch or the place of shipment indicated in transport document",
          "type": "string",
          "maxLength": 65
        },
        "to": {
          "description": "The final destination of the goods",
          "type": "string",
          "maxLength": 65
        },
        "portOfLoading": {
          "description": "The port or airport where the goods were loaded",
          "type": "string",
          "maxLength": 65
        },
        "portOfDischarge": {
          "description": "The port or airport for which the goods are destined",
          "type": "string",
          "maxLength": 65
        },
        "date": {
          "description": "The shipment date of the transaction. Either use this field to specify an actual date or use shipment period. Follows ISO 8601.",
          "type": "string",
          "format": "date",
          "example": "2019-06-14"
        },
        "period": {
          "description": "The period of time during which goods are to be loaded on board/dispatch/taken in charge. Either use this field or date to specify the shipment date of the goods.",
          "type": "string",
          "maxLength": 402,
          "example": "2 weeks before expiry of LC."
        },
        "transhipment": {
          "description": "Identifies whether transhipment is allowed",
          "type": "string",
          "enum": [
            "ALLOWED",
            "NOT-ALLOWED",
            "CONDITIONAL"
          ]
        },
        "partialShipment": {
          "description": "Identifies whether partial shipment is allowed",
          "type": "string",
          "enum": [
            "ALLOWED",
            "NOT-ALLOWED",
            "CONDITIONAL"
          ]
        },
        "incoTerms": {
          "description": "Incoterms or purchase terms. This should match with the incoterm codes available in the system (ex. CFR = Cost and Freight)",
          "type": "string",
          "maxLength": 3,
          "example": "CFR"
        },
        "incoPlace": {
          "description": "The named location of the incoterm. This must be populated when incoTerms has a value.",
          "type": "string",
          "maxLength": 29,
          "example": "London"
        },
        "insuranceForBuyer": {
          "description": "Specify if the insurance cover is to be provided by buyer. If set to false, the seller will cover the insurance.",
          "type": "boolean",
          "default": false
        },
        "freightPayment": {
          "description": "Specify if freight is prepaid or paid on collection",
          "type": "string",
          "enum": [
            "COLLECT",
            "PREPAID"
          ],
          "default": "COLLECT"
        },
        "presentationDays": {
          "description": "The number of days after shipment date within which the document must be presented for payment, acceptance or negotiation. Use presentationPeriodNarrative to specify another type of date other than shipment date",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "presentationPeriodNarrative": {
          "description": "Specify another type of date other than shipment date",
          "$ref": "#/definitions/PresentationPeriodNarrative"
        },
        "documentsToBeSentBy": {
          "description": "The method to be used to send documents",
          "type": "string",
          "enum": [
            "AIR-MAIL",
            "COLLECT",
            "COURIER",
            "FIRST-CLASS-MAIL",
            "HAND-DELIVERY",
            "RECORDED-DELIVERY",
            "REGISTERED-AIR-MAIL",
            "REGISTERED-MAIL"
          ]
        },
        "numberOfDeliveryItems": {
          "description": "The number of mailings to be made. Accept values 1, 2, and 3 only.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PresentationPeriodNarrative": {
      "description": "Definition of Presentation Period Narrative",
      "title": "Presentation Period Narrative",
      "type": "object",
      "properties": {
        "line1": {
          "type": "string",
          "description": "Line 1 of the presentation period narrative",
          "maxLength": 35
        },
        "line2": {
          "type": "string",
          "description": "Line 2 of the presentation period narrative",
          "maxLength": 35
        },
        "line3": {
          "type": "string",
          "description": "Line 3 of the presentation period narrative",
          "maxLength": 35
        },
        "line4": {
          "type": "string",
          "description": "Line 4 of the presentation period narrative",
          "maxLength": 35
        }
      }
    },
    "Payment": {
      "type": "object",
      "title": "Payment",
      "description": "The payment details of the letter of credit.",
      "properties": {
        "creditAvailableBy": {
          "description": "The type of payment for the documentary credit",
          "type": "string",
          "enum": [
            "ACCEPTANCE",
            "DEFERRED-PAYMENT",
            "MIXED-PAYMENT",
            "NEGOTIATION",
            "SIGHT-PAYMENT"
          ],
          "default": "SIGHT-PAYMENT",
          "example": "ACCEPTANCE"
        },
        "tenor": {
          "description": "The tenor or terms of payment of the LC. This should only be populated when creditAvailableBy value is set to ACCEPTANCE, DEFERRED-PAYMENT OR NEGOTIATION.",
          "$ref": "#/definitions/Tenor"
        },
        "mixedPayDetail": {
          "description": "The details of mixed payment. This is mandatory only when creditAvailableBy value is MIXED-PAYMENT.",
          "$ref": "#/definitions/MixedPaymentDetails"
        },
        "draftsDrawnOn": {
          "description": "The party where drafts are drawn on. This field should only be used when creditAvailableBy value is SIGHT-PAYMENT, ACCEPTANCE OR NEGOTIATION",
          "type": "string",
          "enum": [
            "NAMED-BANK",
            "NONE",
            "ADVISING-BANK",
            "ISSUING-BANK",
            "OURSELVES",
            "REIMBURSING-BANK"
          ]
        },
        "draftsDrawnOnBank": {
          "description": "The name and address of the bank on which drafts are drawn. This field must be used only when draftsDrawnOn is NAMED-BANK",
          "$ref": "#/definitions/BankNarrative"
        },
        "creditAvailableWith": {
          "description": "The party where drafts are drawn on. This field should only be used when creditAvailableBy is ACCEPTANCE, SIGHT-PAYMENT, DEFERRED-PAYMENT OR NEGOTIATION",
          "type": "string",
          "enum": [
            "NAMED-BANK",
            "ADVISING-BANK",
            "ISSUING-BANK",
            "OURSELVES",
            "ANY-BANK",
            "ANY-BANK-IN-CITY",
            "ANY-BANK-IN-COUNTRY"
          ]
        },
        "creditAvailablewithBank": {
          "description": "The name and address of the bank where the credit is available. Must be populated only when creditAvailableWith has value NAMED-BANK.",
          "$ref": "#/definitions/BankNarrative"
        },
        "creditAvailablewithCityBank": {
          "description": "The named City wherein the credit is available at any bank. Must be populated only when creditAvailableWith has value ANY-BANK-IN-CITY.",
          "type": "string",
          "maxLength": 65,
          "example": "Birmingham"
        },
        "creditAvailablewithCountryBank": {
          "description": "The named Country wherein the credit is available at any bank. Must be populated only when creditAvailableWith has value ANY-BANK-IN-COUNTRY. Follows ISO 3166-1 alpha-2.",
          "pattern": "[A-Z]{2,2}",
          "type": "string",
          "example": "DE"
        },
        "invoicePercent": {
          "description": "The percentage of the invoice value of the goods that the transaction covers.",
          "type": "number",
          "format": "double",
          "default": 100,
          "example": 99.75
        },
        "draftsDrawnByRole": {
          "description": "The party that will draw the draft. This should only be populated when creditAvailableBy is set to ACCEPTANCE, MIXED-PAYMENT, NEGOTIATION OR SIGHT-PAYMENT.",
          "type": "string",
          "enum": [
            "NAMED-BENEFICIARY",
            "NAMED-NEGOTIATING-BANK",
            "BENEFICIARY",
            "NEGOTIATING-BANK"
          ]
        },
        "draftsDrawnBy": {
          "description": "The details of the party who will draw the draft. This must be populated only when draftsDrawnByRole is NAMED-NEGOTIATING-BANK.",
          "$ref": "#/definitions/Party"
        }
      }
    },
    "BankNarrative": {
      "title": "Bank Narrative",
      "description": "Name and Address details of the named bank.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Full name of the bank. If the customer ID within FTI is known, input the ID in uppercase in this field and disregard the succeeding address fields. Otherwise, populate this field with the name of the bank.",
          "maxLength": 35
        },
        "addressLine1": {
          "type": "string",
          "description": "Line 1 of the address",
          "maxLength": 35
        },
        "addressLine2": {
          "type": "string",
          "description": "Line 2 of the address",
          "maxLength": 35
        },
        "addressLine3": {
          "type": "string",
          "description": "Line 3 of the address",
          "maxLength": 35
        }
      }
    },
    "MixedPaymentDetails": {
      "description": "Definition of Mixed Payment Details",
      "title": "Mixed Payment Details",
      "type": "object",
      "properties": {
        "line1": {
          "type": "string",
          "description": "Line 1 of the mixed payment details",
          "maxLength": 35
        },
        "line2": {
          "type": "string",
          "description": "Line 2 of the mixed payment details",
          "maxLength": 35
        },
        "line3": {
          "type": "string",
          "description": "Line 3 of the mixed payment details",
          "maxLength": 35
        },
        "line4": {
          "type": "string",
          "description": "Line 4 of the mixed payment details",
          "maxLength": 35
        }
      }
    },
    "Tenor": {
      "type": "object",
      "title": "Tenor",
      "description": "The tenor or terms under which the payment is scheduled details of the letter of credit.",
      "properties": {
        "maturityDate": {
          "description": "This is used to define a payment due date as an actual date. This must be blank if period, fromAfter and start under Tenor are populated. Follows ISO 8601.",
          "type": "string",
          "format": "date",
          "example": "2019-06-14"
        },
        "period": {
          "description": "The period of the tenor (ex. 3D = 3 Days, 3M = 3 Months, 3Q = 3 Quarters, 3W = 3 Weeks, 3Y = 3 Years). This must be blank if maturity date under Tenor is populated.",
          "type": "string",
          "minLength": 2,
          "maxLength": 6,
          "example": "3D"
        },
        "fromAfter": {
          "description": "Used to indicate whether the tenor period will be calculated 'From' or 'After' the base date. This must be blank if maturity date under Tenor is populated.",
          "type": "string",
          "enum": [
            "AFTER",
            "FROM-INCLUDE-START-DATE",
            "FROM-EXCLUDE-START-DATE"
          ]
        },
        "start": {
          "description": "The base date to be used to identify the payment due date. This must be blank if maturity date under Tenor is populated.",
          "type": "string",
          "enum": [
            "AIR-WAYBILL",
            "ARRIVAL-OF-GOODS",
            "BILL-OF-EXCHANGE",
            "BILL-OF-LADING",
            "INVOICE",
            "SHIPMENT-DATE",
            "SIGHT",
            "OTHER"
          ]
        },
        "narrative": {
          "description": "This is used when based date to calculate due date is not included in 'start' options. This must only be used when start is set to OTHER.",
          "type": "string",
          "maxLength": 148
        }
      }
    },
    "Amount": {
      "type": "object",
      "title": "Amount",
      "description": "The amount details of the letter of credit.",
      "required": [
        "amount",
        "currency"
      ],
      "properties": {
        "amount": {
          "description": "The amount of the transaction",
          "pattern": "-?[0-9]{1,18}(\\.[0-9]{1,3})?",
          "type": "string",
          "minLength": 1,
          "maxLength": 22,
          "example": "100000.00"
        },
        "currency": {
          "description": "The currency of the transaction. Follows ISO 4217 Alpha 3 currency code.",
          "pattern": "[A-Z]{3,3}",
          "type": "string",
          "example": "USD"
        },
        "tolerance": {
          "description": "The tolerance type of the transaction. If value is set to ABOUT, tolerance will be set to +/- 10%. If value is set to EXACT, tolerance will be set to 0. If value is set to NOT-EXCEEDING, tolerance will be set to +0% and -5%.",
          "type": "string",
          "example": "OTHER",
          "enum": [
            "ABOUT",
            "EXACT",
            "OTHER",
            "NOT-EXCEEDING",
            "MIN-OR-MAX"
          ]
        },
        "minPercentAmountTolerance": {
          "description": "The minimum percentage tolerance relative to the documentary credit amount. This should only be populated when tolerance is set to value OTHER.",
          "type": "string",
          "maxLength": 2,
          "example": "5"
        },
        "maxPercentAmountTolerance": {
          "description": "The maximum percentage tolerance relative to the documentary credit amount. This should only be populated when tolerance is set to value OTHER.",
          "type": "string",
          "maxLength": 2,
          "example": "10"
        },
        "minAmountTolerance": {
          "description": "The minimum tolerance amount of the transaction. This should only be populated when tolerance is set to value MIN-OR-MAX. The entered amount must not be lesser than the LC amount.",
          "type": "string",
          "pattern": "-?[0-9]{1,18}(\\.[0-9]{1,3})?",
          "maxLength": 22,
          "example": "100.00"
        },
        "maxAmountTolerance": {
          "description": "The maximum tolerance amount of the transaction. This should only be populated when tolerance is set to value MIN-OR-MAX. The entered amount must not be greater than the LC amount.",
          "type": "string",
          "pattern": "-?[0-9]{1,18}(\\.[0-9]{1,3})?",
          "maxLength": 22,
          "example": "1000.00"
        }
      }
    },
    "AdditionalAmount": {
      "type": "object",
      "title": "Additional Amount",
      "description": "The additional amount details of the letter of credit. ",
      "required": [
        "additionalAmount",
        "additionalAmountCurrency"
      ],
      "properties": {
        "additionalAmount": {
          "description": "Any additional amounts covered such as insurance, freight, interest etc.",
          "pattern": "-?[0-9]{1,18}(\\.[0-9]{1,3})?",
          "type": "string",
          "maxLength": 22,
          "example": "30.00"
        },
        "additionalAmountCurrency": {
          "description": "The currency of the additional amount. Follows ISO 4217 Alpha 3 currency code. This must be provided if additional amount is available.",
          "pattern": "[A-Z]{3,3}",
          "type": "string",
          "example": "USD"
        },
        "additionalAmountNarrative": {
          "description": "Additional information about the additional amount",
          "type": "string",
          "maxLength": 148
        }
      }
    },
    "Confirmation": {
      "type": "object",
      "title": "Confirmation",
      "description": "The confirmation details of the letter of credit. ",
      "required": [
        "instruction"
      ],
      "properties": {
        "instruction": {
          "type": "string",
          "description": "The instruction for the requested confirmation party",
          "enum": [
            "CONFIRMED",
            "MAY-ADD",
            "UNCONFIRMED"
          ],
          "default": "UNCONFIRMED"
        },
        "chargesPayableBy": {
          "type": "string",
          "description": "-> The party responsible- the beneficiary or the applicant - for the payment of confirmation charges. This field is mandatory when 'instruction' is set to CONFIRMED or MAY-ADD",
          "enum": [
            "APPLICANT",
            "BENEFICIARY"
          ]
        },
        "requestedConfirmationPartyRole": {
          "type": "string",
          "description": "-> The party - Advising Bank, Advise Through Bank , or another bank- that is requested to add its confirmation. This is mandatory when 'instruction' is set to Confirm or MayAdd. If set to 'OTHER', party details of requested confirmation party should be indicated in the 'requestedConfirmationParty' field.",
          "enum": [
            "ADVISE-THROUGH-BANK",
            "ADVISING-BANK",
            "OTHER"
          ]
        },
        "requestedConfirmationParty": {
          "description": "The party that is requested to add its confirmation. This must be populated when requestedConfirmationPartyRole is set to OTHER.",
          "$ref": "#/definitions/Party"
        }
      }
    },
    "ApplicableRule": {
      "type": "object",
      "title": "Applicable Rule",
      "description": "The rule the credit is subject to",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "The rule the credit is subject to",
          "type": "string",
          "default": "UCP-LATEST-VERSION",
          "enum": [
            "EUCP-LATEST-VERSION",
            "EUCPURR-LATEST-VERSION",
            "ISP-LATEST-VERSION",
            "OTHER",
            "UCP-LATEST-VERSION",
            "UCPURR-LATEST-VERSION"
          ]
        },
        "narrative": {
          "description": "The credit is subject to any other rules. Only used if 'id' is set to OTHER",
          "type": "string",
          "maxLength": 35
        }
      }
    },
    "RevolvingDetail": {
      "type": "object",
      "title": "Revolving Detail",
      "description": "The revolving details of the letter of credit. These fields are used when 'revolving' is set to true",
      "properties": {
        "revolving": {
          "description": "Identifies if documentary credit is revolving.",
          "type": "boolean",
          "default": false
        },
        "cumulative": {
          "description": "Identifies if the revolution is to be cumulative.",
          "type": "boolean"
        },
        "period": {
          "description": "The period at which the credit is to revolve. (ex. 3D = 3 Days, 3M = 3 Months)",
          "type": "string",
          "maxLength": 6,
          "example": "3D"
        },
        "revolutions": {
          "description": "The number of times the documentary credit is to revolve.",
          "type": "integer",
          "format": "int32",
          "example": 3
        },
        "nextDate": {
          "description": "The date on which the first revolution is to take place. Follows ISO 8601.",
          "type": "string",
          "format": "date",
          "example": "2019-06-14"
        },
        "noticeDays": {
          "description": "If notification is required, specify the number of days before each revolution that notice should be created.",
          "type": "integer",
          "format": "int32",
          "example": 2
        },
        "chargeToPeriod": {
          "description": "Indicate the period for calculating charges",
          "type": "string",
          "enum": [
            "FIRST-PERIOD",
            "EXPIRY"
          ]
        }
      }
    },
    "NameAndAddress": {
      "title": "Name and Address",
      "description": "The full name and address of the party",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Full name of the party",
          "maxLength": 255,
          "example": "ABC INDUSTRIES LTD."
        },
        "addressLine1": {
          "type": "string",
          "description": "Line 1 of the address",
          "maxLength": 255,
          "example": "SLOUGH ESTATES"
        },
        "addressLine2": {
          "type": "string",
          "description": "Line 2 of the address",
          "maxLength": 255,
          "example": "BATH ROAD"
        },
        "addressLine3": {
          "type": "string",
          "description": "Line 3 of the address",
          "maxLength": 255,
          "example": "SLOUGH"
        }
      }
    },
    "Party": {
      "type": "object",
      "title": "Party",
      "description": "Used for defining information of the parties - Applicant, Beneficiary, Advising Bank etc.- available in the transaction",
      "properties": {
        "customerId": {
          "description": "The customer ID of the party within FTI, if available. If populated with a valid value, the saved values in the FTI Customer record will be used instead of the values entered on the succeeding Party fields.",
          "type": "string",
          "maxLength": 20,
          "example": "ABC"
        },
        "nameAndAddress": {
          "description": "The full name and address of the party",
          "$ref": "#/definitions/NameAndAddress"
        },
        "country": {
          "description": "The country of the party. Follows ISO 3166-1 alpha-2.",
          "pattern": "[A-Z]{2,2}",
          "type": "string",
          "example": "GB"
        },
        "postalCode": {
          "description": "The zip code or postcode of the party",
          "type": "string",
          "maxLength": 10
        },
        "swiftAddress": {
          "description": "The SWIFT BIC of the party",
          "type": "string",
          "maxLength": 14
        },
        "reference": {
          "description": "The reference of the party. If the party is the principal of the transaction and event is initial, the value entered in this field will be the 'Their Reference' value of the master in FTI. If the party is principal and event is succeeding, this value will be the reference of the event transaction.",
          "type": "string",
          "maxLength": 34,
          "example": "ABC001"
        },
        "contactName": {
          "description": "The contact name of the party",
          "type": "string",
          "maxLength": 35,
          "example": "John Smith"
        },
        "contactNumbers": {
          "description": "The phone contact numbers of the party",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactNumber"
          }
        },
        "telexDetails": {
          "description": "The telex details of the party",
          "$ref": "#/definitions/TelexDetail"
        },
        "email": {
          "description": "The email address of the party",
          "type": "string",
          "maxLength": 128,
          "example": "abcindustries.com"
        }
      }
    },
    "ContactNumber": {
      "type": "object",
      "title": "Contact Number",
      "description": "Phone contact numbers of the party",
      "required": [
        "type",
        "number"
      ],
      "properties": {
        "type": {
          "description": "Phone number type. The list below is indicative rather than exhaustive.",
          "type": "string",
          "example": "TELEPHONE",
          "enum": [
            "TELEPHONE",
            "FAX-NUMBER"
          ]
        },
        "number": {
          "description": "Phone number",
          "type": "string",
          "maxLength": 20,
          "example": "+44 (1753) 890 171"
        }
      }
    },
    "TelexDetail": {
      "type": "object",
      "title": "Telex Detail",
      "description": "Telex details of the party",
      "properties": {
        "number": {
          "description": "Telex number of the party.",
          "type": "string",
          "maxLength": 20,
          "example": "871161147"
        },
        "answerBack": {
          "description": "Telex answer back of the party",
          "type": "string",
          "maxLength": 8,
          "example": "57254738"
        }
      }
    },
    "AmendmentDetails": {
      "title": "Amendment Details",
      "description": "Import letter of credit amendment details",
      "type": "object",
      "properties": {
        "amendDate": {
          "description": "The date of the amendment. Follows ISO 8601.",
          "type": "string",
          "format": "date",
          "example": "2019-01-14"
        },
        "amendmentNarrative": {
          "description": "General narrative regarding the amendment.",
          "type": "string",
          "example": "The following details of the letter of credit has been amended...",
          "maxLength": 15860
        },
        "amendmentNumber": {
          "description": "The amendment number of this transaction",
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "beneApprovalRequired": {
          "description": "Identifies whether amendment requires beneficiary approval",
          "type": "boolean"
        },
        "amendmentChargesPayableBy": {
          "description": "The party responsible for the payment of the amendment charge",
          "type": "string",
          "enum": [
            "APPLICANT",
            "BENEFICIARY",
            "OTHER-PARTY"
          ]
        },
        "amendmentChargeOtherText": {
          "description": "Narrative when amendment charges is to be paid by a party other than the applicant nor the beneficiary. Mandatory when amendmentChargesPayableBy is set to OTHER-PARTY",
          "type": "string",
          "maxLength": 222
        }
      }
    },
    "EventReference": {
      "title": "Event Reference",
      "description": "Bank's reference for this event transaction.",
      "type": "object",
      "properties": {
        "owningTransactionBankEventReference": {
          "description": "Bank's reference for this event transaction. The value returned for this field could change and is not yet final if Event status is set to In-progress.",
          "type": "string",
          "maxLength": 6,
          "example": "ISS001"
        }
      }
    },
    "MasterEvents": {
      "title": "Master Events",
      "description": "The events under the Import Letter of Credit Master",
      "type": "object",
      "properties": {
        "events": {
          "description": "The high-level detail of an import letter of credit event transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MasterEventsMainDetails"
          }
        }
      }
    },
    "MasterEventsDetails": {
      "title": "Master Events Details",
      "description": "The events and corresponding details under the Import Letter of Credit Master",
      "type": "object",
      "properties": {
        "eventCode": {
          "description": "The code of an Import Letter of Credit event. Sample values for the events that could be created using this API are 1) 'ISI' for Issue, 2) 'NAMI' for Amend and 3) 'CRC' for Claim Received.",
          "type": "string",
          "maxLength": 4,
          "example": "ISI"
        },
        "eventName": {
          "description": "The set configurable name of an Import Letter of Credit event.",
          "type": "string",
          "maxLength": 60,
          "example": "Issue"
        },
        "eventReference": {
          "description": "Bank's reference for this event transaction. The value returned for this field could change and is not yet final if Event status is set to In-progress.",
          "$ref": "#/definitions/EventReference"
        },
        "crossReference": {
          "description": "The event reference which this event is related to. For example a 'Beneficiary Response to Amend' event will have cross reference value AMD001 which is the event reference of the amend event that the beneficiary responded to.",
          "type": "string",
          "maxLength": 30,
          "example": "AMD001"
        },
        "swiftMessageInitiated": {
          "description": "Indicates if the transaction in the system is created due to an incoming SWIFT message.",
          "type": "boolean"
        }
      }
    },
    "MasterEventsMainDetails": {
      "title": "Master Events Main Details",
      "description": "The events and high-level corresponding details under the Import Letter of Credit Master",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventIdentity"
        },
        {
          "$ref": "#/definitions/EventStatus"
        },
        {
          "$ref": "#/definitions/MasterEventsDetails"
        }
      ]
    },
    "ClaimResponse": {
      "title": "Claim Response",
      "description": "The details on the applicant's response to a claim.",
      "type": "object",
      "required": [
        "claimReference",
        "sender"
      ],
      "properties": {
        "claimReference": {
          "description": "The reference of the claim being approved or rejected",
          "type": "string",
          "maxLength": 6
        },
        "sender": {
          "description": "The party who sent the response to the issuing bank with regards to the claim.",
          "$ref": "#/definitions/Party"
        },
        "narrative": {
          "description": "The details relating to the response by the presenter.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClaimNarrative"
          },
          "maxItems": 6
        },
        "refusalNarrative": {
          "description": "The detailed narrative on the presenter's refusal on the claim.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefusalNarrativeLine"
          },
          "maxItems": 70
        }
      }
    },
    "RefusalNarrativeLine": {
      "title": "Refusal Narrative Line",
      "description": "Narrative lines for the refusal of claim.",
      "type": "object",
      "properties": {
        "line": {
          "type": "string",
          "maxLength": 50,
          "description": "The detailed narrative on the presenter's refusal on the claim."
        }
      }
    },
    "ClaimResponseAction": {
      "title": "Claim Response Action",
      "type": "object",
      "description": "A user-defined code of the response action set in FTI.",
      "properties": {
        "responseActionId": {
          "type": "string",
          "maxLength": 3,
          "description": "A user-defined code of the response action set in FTI."
        }
      }
    },
    "ClaimResponseType": {
      "title": "Claim Response Type",
      "type": "object",
      "description": "The claim response type if the response action ID is not known.",
      "properties": {
        "responseType": {
          "type": "string",
          "enum": [
            "APPROVAL",
            "REFUSAL"
          ],
          "description": "If responseActionId is not known, this field should be populated with the response classification. APPROVAL means that the claim is accepted and agreed upon by the presenter while REFUSAL means that the claim is rejected by the presenter. The set value is used to find the default response action. This field should not be populated when responseActionId is populated."
        }
      }
    },
    "ClaimNarrative": {
      "title": "Claim Narrative",
      "description": "Narrative lines of the claim response.",
      "type": "object",
      "properties": {
        "line": {
          "description": "The detailed narrative on the claim response.",
          "type": "string",
          "maxLength": 35
        }
      }
    },
    "ILCCommon": {
      "type": "object",
      "title": "ILC Common",
      "description": "Fields common to Issuance, Amendment and Claims Received events.",
      "properties": {
        "inputBranch": {
          "description": "The code of the branch where the transaction is being created",
          "type": "string",
          "minLength": 1,
          "maxLength": 8,
          "example": "LOND"
        },
        "behalfOfBranch": {
          "description": "The branch code of the behalf of branch",
          "type": "string",
          "minLength": 1,
          "maxLength": 8,
          "example": "SLOUGH"
        },
        "attachments": {
          "description": "Details on the attached document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attachment"
          }
        },
        "actionItems": {
          "description": "Key instructions or data from the client",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionItem"
          }
        }
      }
    },
    "SenderReference": {
      "title": "Sender Reference",
      "description": "The reference of the sender of this transaction (if known) which will be used in a validation in the system.",
      "type": "object",
      "properties": {
        "senderReference": {
          "description": "The reference of the sender of this transaction (if known) which will be used in a validation in the system.",
          "type": "string",
          "maxLength": 34,
          "example": "ABC001"
        }
      }
    },
    "SenderId": {
      "title": "Sender Identity",
      "description": "The customer ID in FTI of the sender of this transaction (if known)",
      "type": "object",
      "properties": {
        "senderId": {
          "description": "The customer ID in FTI of the sender of this transaction (if known)",
          "type": "string",
          "maxLength": 20,
          "example": "AMALGA"
        }
      }
    },
    "ILCIssueAmendCommon": {
      "type": "object",
      "title": "ILC Issue Amend Common",
      "description": "Fields common to Issuance and Amendment events.",
      "properties": {
        "narrative": {
          "$ref": "#/definitions/Narrative"
        },
        "adviseDirect": {
          "description": "Identifies if LC is to be advised directly to the beneficiary.",
          "type": "boolean",
          "default": false
        },
        "adviseThruBank": {
          "$ref": "#/definitions/Party"
        },
        "adviseThruBankAccount": {
          "description": "Account number of the advise through bank party.",
          "type": "string",
          "maxLength": 35,
          "example": "364381039"
        },
        "advisingBank": {
          "$ref": "#/definitions/Party"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "additionalAmount": {
          "$ref": "#/definitions/AdditionalAmount"
        },
        "applicableRule": {
          "$ref": "#/definitions/ApplicableRule"
        },
        "applicant": {
          "$ref": "#/definitions/Party"
        },
        "applicantBank": {
          "$ref": "#/definitions/Party"
        },
        "applicantInstruction": {
          "description": "Any instructions from the applicant",
          "type": "string",
          "maxLength": 32000
        },
        "applicationDate": {
          "description": "The application date of the letter of credit. Follows ISO 8601.",
          "type": "string",
          "format": "date",
          "example": "2019-01-13"
        },
        "beneficiary": {
          "$ref": "#/definitions/Party"
        },
        "beneficiaryAccountNumber": {
          "description": "The account number at overseas bank of the beneficiary",
          "type": "string",
          "maxLength": 34
        },
        "chargeDetail": {
          "$ref": "#/definitions/Charge"
        },
        "confirmationDetail": {
          "$ref": "#/definitions/Confirmation"
        },
        "domesticExpiry": {
          "description": "Identifies if the LC expires in the bank's operating country.",
          "type": "boolean",
          "default": false
        },
        "expiryDate": {
          "description": "The latest date for presentation under the documentary credit. Follows ISO 8601.",
          "type": "string",
          "format": "date",
          "example": "2019-06-14"
        },
        "expiryPlace": {
          "description": "The place where documents may be presented",
          "type": "string",
          "minLength": 1,
          "maxLength": 29,
          "example": "New York"
        },
        "instructionsToAdvisingBank": {
          "description": "Any instructions to the advising bank",
          "type": "string",
          "maxLength": 32000
        },
        "instructionsToPayingBank": {
          "description": "Any instructions to paying/accepting or negotiating bank",
          "type": "string",
          "maxLength": 1820
        },
        "issueBy": {
          "type": "string",
          "description": "The method how the letter of credit is to be communicated",
          "enum": [
            "EMAIL",
            "EMAIL-ACCOUNT-OFFICER",
            "FAX",
            "GATEWAY",
            "INTERNAL",
            "MAIL",
            "NO-DOC-REQUIRED",
            "SWIFT",
            "TELEX",
            "TELEX-VIA-SWIFT"
          ]
        },
        "issueDate": {
          "description": "The issue date of the letter of credit. Follows ISO 8601.",
          "type": "string",
          "format": "date",
          "example": "2019-01-14"
        },
        "active": {
          "description": "Identifies if the LC is active",
          "type": "boolean",
          "default": true
        },
        "paymentDetail": {
          "$ref": "#/definitions/Payment"
        },
        "reimbursingBank": {
          "$ref": "#/definitions/Party"
        },
        "revolvingDetail": {
          "$ref": "#/definitions/RevolvingDetail"
        },
        "shipmentDetail": {
          "$ref": "#/definitions/Shipment"
        },
        "standby": {
          "description": "Identifies if the LC is a standby LC. This should only be populated when the LC is a form of Documentary Credit.",
          "type": "boolean",
          "default": false
        },
        "transferable": {
          "description": "Identifies if LC is transferable",
          "type": "boolean",
          "default": false
        }
      }
    },
    "ILCIssuanceRequest": {
      "title": "ILC Issuance Request",
      "description": "Trade Import Letter Of Credit Issuance definition in the request body",
      "type": "object",
      "required": [
        "behalfOfBranch",
        "issueDate",
        "expiryDate",
        "expiryPlace",
        "applicant",
        "beneficiary",
        "advisingBank",
        "inputBranch",
        "amount"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ILCCommon"
        },
        {
          "$ref": "#/definitions/SenderReference"
        },
        {
          "$ref": "#/definitions/ILCIssueAmendCommon"
        }
      ]
    },
    "ILCIssuance": {
      "title": "ILC Issuance",
      "description": "Trade Import Letter Of Credit Issuance definition in the response body",
      "required": [
        "id",
        "masterId"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventIdentity"
        },
        {
          "$ref": "#/definitions/MasterIdentity"
        },
        {
          "$ref": "#/definitions/MasterReference"
        },
        {
          "$ref": "#/definitions/EventReference"
        },
        {
          "$ref": "#/definitions/MasterStatus"
        },
        {
          "$ref": "#/definitions/EventStatus"
        },
        {
          "$ref": "#/definitions/ILCIssuanceRequest"
        }
      ]
    },
    "ILCAmendmentRequest": {
      "title": "ILC Amendment Request",
      "description": "Trade Import letter of credit amendment definition in the request body",
      "type": "object",
      "required": [
        "behalfOfBranch",
        "owningTransactionBankReference",
        "amendDate",
        "inputBranch",
        "amount"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ILCCommon"
        },
        {
          "$ref": "#/definitions/SenderReference"
        },
        {
          "$ref": "#/definitions/ILCIssueAmendCommon"
        },
        {
          "$ref": "#/definitions/MasterReference"
        },
        {
          "$ref": "#/definitions/MasterIdentity"
        },
        {
          "$ref": "#/definitions/AmendmentDetails"
        }
      ]
    },
    "ILCAmendment": {
      "title": "ILC Amendment",
      "description": "Trade Import letter of credit amendment definition in the response body",
      "required": [
        "id"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EventIdentity"
        },
        {
          "$ref": "#/definitions/MasterStatus"
        },
        {
          "$ref": "#/definitions/EventReference"
        },
        {
          "$ref": "#/definitions/EventStatus"
        },
        {
          "$ref": "#/definitions/ILCAmendmentRequest"
        }
      ]
    },
    "ILCClaimRequest": {
      "title": "ILC Claim Request",
      "description": "Trade Import Letter Of Credit Claim Received object definition in the request body",
      "type": "object",
      "required": [
        "inputBranch",
        "owningTransactionBankReference",
        "behalfOfBranch"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ILCCommon"
        },
        {
          "$ref": "#/definitions/SenderId"
        },
        {
          "$ref": "#/definitions/SenderReference"
        },
        {
          "$ref": "#/definitions/MasterReference"
        },
        {
          "$ref": "#/definitions/MasterIdentity"
        }
      ]
    },
    "ILCClaim": {
      "title": "ILC Claim",
      "description": "Trade Import Letter Of Credit Claim Received object definition in the response body",
      "type": "object",
      "required": [
        "id",
        "masterId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EventIdentity"
        },
        {
          "$ref": "#/definitions/MasterStatus"
        },
        {
          "$ref": "#/definitions/EventReference"
        },
        {
          "$ref": "#/definitions/EventStatus"
        },
        {
          "$ref": "#/definitions/ILCClaimRequest"
        }
      ]
    },
    "ILCOutstandingRequest": {
      "title": "ILC Outstanding Request",
      "description": "Trade Import Letter Of Credit Outstanding Claim object definition in the request body",
      "type": "object",
      "required": [
        "inputBranch",
        "owningTransactionBankReference",
        "behalfOfBranch"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ILCCommon"
        },
        {
          "$ref": "#/definitions/ClaimResponseAction"
        },
        {
          "$ref": "#/definitions/ClaimResponseType"
        },
        {
          "$ref": "#/definitions/ClaimResponse"
        },
        {
          "$ref": "#/definitions/MasterReference"
        },
        {
          "$ref": "#/definitions/MasterIdentity"
        }
      ]
    },
    "ILCOutstanding": {
      "title": "ILC Outstanding",
      "description": "Trade Import Letter Of Credit Outstanding Claim object definition in the response body",
      "type": "object",
      "required": [
        "id",
        "masterId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/EventIdentity"
        },
        {
          "$ref": "#/definitions/MasterStatus"
        },
        {
          "$ref": "#/definitions/EventStatus"
        },
        {
          "$ref": "#/definitions/EventReference"
        },
        {
          "$ref": "#/definitions/ILCCommon"
        },
        {
          "$ref": "#/definitions/ClaimResponseAction"
        },
        {
          "$ref": "#/definitions/ClaimResponse"
        },
        {
          "$ref": "#/definitions/MasterReference"
        },
        {
          "$ref": "#/definitions/MasterIdentity"
        }
      ]
    },
    "ILCMaster": {
      "title": "ILC Master",
      "description": "Trade Import Letter Of Credit Master",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MasterIdentity"
        },
        {
          "$ref": "#/definitions/MasterReference"
        },
        {
          "$ref": "#/definitions/MasterStatus"
        },
        {
          "$ref": "#/definitions/ILCIssuanceRequest"
        },
        {
          "$ref": "#/definitions/MasterEvents"
        }
      ]
    },
    "Detail": {
      "title": "Detail",
      "type": "string",
      "maxLength": 256,
      "description": "A human-readable explanation specific to this occurrence of the problem."
    },
    "Problem": {
      "type": "object",
      "title": "Problem",
      "description": "Details on the problem encountered",
      "required": [
        "title"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "A short summary of the problem.",
          "maxLength": 128
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The HTTP status code generated by the origin server for this occurrence of the problem."
        },
        "type": {
          "type": "string",
          "description": "The type of problem encountered. Data that did not pass the swagger requirements will have type PAYLOAD VALIDATION. API calls with data that passed the swagger requirements validation but encountered another error will have type CORE VALIDATION.",
          "enum": [
            "PAYLOAD-VALIDATION",
            "CORE-VALIDATION"
          ]
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Detail"
          }
        }
      }
    }
  }
}