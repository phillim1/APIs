apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: artist-api
  description: marts
spec:
  type: openapi
  lifecycle: experimental
  owner: backstage
  system: marts-apis
  definition: |
    openapi: '3.0.0'
    info:
      description: >-
        The Trades Description API facilitates the retrieval of trade financial and contractual information (deal's terms and conditions) from the position keeping system to be consumed by external financial services.
      version: 0.0.1
      title: Trades Description
      x-finastra-category: "Treasury and Capital Markets"
      x-finastra-subcategory: Portfolio Analytics
      x-finastra-short-description: >-
        Retrieve latest version of trade's financials.
      x-finastra-tags:
        - Fusion Summit
        - Trade
      x-finastra-channel-type: B2B
      x-finastra-maturity-level: BETA
      x-finastra-audience: PUBLIC
      x-finastra-implementability: INTERNAL
      x-finastra-icon: Icons_4l.svg
    servers:
      - url: https://capital-market/trades-description/v1
        description: base URL
      - url: https://api.preprod.fusionfabric.cloud
        description: host url
    tags:
      - name: Trades Description
        description: Operations on Trades portfolio
    security:
      - Oauth2: []
    paths:
      /trades:
        get:
          tags:
            - Trades Description
          summary: Retrieve the list of trades based on the query parameters
          description: Retrieve list of trades.
          operationId: get-trades
          parameters:
            - in: query
              name: tradeTypes
              required: false
              schema:
                $ref: '#/components/schemas/TradeTypeIds'
              examples:
                oneTradeType:
                  summary: Example of a single TradeType
                  value: ['IRSWAP'] #?tradeTypes=IRSWAP
                multipleTradeTypes:
                  summary: Example of a multiple TradeType
                  value: ['IRSWAP', 'FXSWAP'] #?tradeTypes=IRSWAP,FXSWAP
            - in: query
              name: tradeStatuses
              required: false
              schema:
                $ref: '#/components/schemas/TradeStatusIds'
              examples:
                oneTradeStatus:
                  summary: Example of a single TradeStatus
                  value: ['VER'] #?tradeStatuses=VER
                multipleTradeStatuses:
                  summary: Example of a multiple TradeStatuses
                  value: ['DONE','VER'] #?tradeStatuses=DONE,VER
            - in: query
              name: counterpartyId
              required: false
              schema:
                $ref: '#/components/schemas/CounterpartiesId'
              examples:
                oneCounterPartyId:
                  summary: Example of a single counterpartyId
                  value: ['00008000AA1A'] #?counterpartyId=00008000AA1A
                multipleCounterPartyIds:
                  summary: Example of a multiple counterpartyIds
                  value: ['00008000AA1A','0010107588B'] #?counterpartyId=00008000AA1A,0010107588B
            - in: query
              name: asOfDate
              required: false
              schema:
                type: string
                format: date
              description: >-
                The reference date to retrieve the portfolio of trades for
                calculations.  The date must be sent as a full date formatted
                according to ISO  8601 standards (yyyy-mm-dd).
              example: '2020-08-18'
            - in: query
              name: businessUnits
              description: The list of business units to query trades from.
              required: false
              schema:
                $ref: '#/components/schemas/BusinessUnits'
            - in: query
              name: desks
              description: The list of trading desks to query trades from.
              required: false
              schema:
                $ref: '#/components/schemas/TradingDesks'
            - in: query
              name: books
              description: The list of trading books to query trades from.
              required: false
              schema:
                $ref: '#/components/schemas/TradingBooks'
            - in: query
              name: showDetails
              description: The flag to request trade details
              required: false
              schema:
                type: boolean
                default: false
          responses:
            '200':
              description: The list of trades retrieved.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/TradeSummaries'
            '400':
              description: Malformed parameters. Incorrect parameter name or format.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '401':
              description: Unauthorized
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '403':
              description: Forbidden
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '500':
              description: Unexpected error.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
      '/trades/{tradeType}/{tradeId}/financials':
        get:
          tags:
            - Trades Description
          summary: >-
            Get financial description of a trade required by external calculation
            service. The returned details include the trade term deal and condition as well as schedule
          description: Get details of trade financials with the corresponding schedule
          operationId: get-trades-tradetype-tradeId-financials
          parameters:
            - in: path
              name: tradeType
              required: true
              description: The trade financial type.
              schema:
                type: string
                maxLength: 50
              example: 'IRSWAP'
            - in: path
              name: tradeId
              description: Identifier of the trade for which the details are retrieved.
              required: true
              schema:
                type: string
                maxLength: 256
              example: '500560B'
          responses:
            '200':
              description: The query was executed successfully.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/TradeDetails'
            '400':
              description: Malformed parameters. Incorrect parameter name or format.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '401':
              description: Unauthorized
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '403':
              description: Forbidden
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '404':
              description: Not Found
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
            '500':
              description: Unexpected error.
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Error'
    components:
      securitySchemes:
        Oauth2:
          type: oauth2
          description: Oauth 2.0 authentication
          flows:
            clientCredentials:
              tokenUrl: 'https://api.preprod.fusionfabric.cloud/login/v1/sandbox/oidc/token'
              scopes: {}
      schemas:
        TradeTypeIds:
          type: array
          title: TradeTypeIds
          description: List of Trade Type identifiers for the search/filter
          items:
            type: string
        TradeStatusIds:
          type: array
          title: TradeStatusIds
          description: List of Trade Statuses identifiers for the search/filter
          items:
            type: string
        CounterpartiesId:
          type: array
          title: CounterpartiesId
          description: The identifiers of counterparties.
          items:
            type: string
            description: >-
              Identifier of the counterparty encrypted for security purposes.
            example: 0010107588B
            maxLength: 50
        CurrencyAmount:
          type: object
          title: CurrencyAmount
          description: The currency amount.
          properties:
            currency:
              type: string
              pattern: "[A-Z]{3,3}"
              example: "EUR"
              description: Currency of the amount in format ISO 4217.
            amount:
              type: number
              description: Value of the currency amount
              format: double
              example: 12222.45
        TradingBook:
          type: object
          title: TradingBook
          description: Name of the trading book that define location/portfolio in the core system.
          properties:
            businessUnit:
              type: string
              description: >-
                Trading book location/portfolio business unit name
              example: FINASTRA
              maxLength: 50
            desk:
              type: string
              description: >-
                Trading book location/portfolio desk name
              example: LONDON
              maxLength: 50
            book:
              type: string
              description: >-
                Trading book location/portfolio book name.
              example: SWAPS
              maxLength: 50
        TradingBooks:
          type: array
          title: TradingBooks
          description: The list of trading books
          items:
            type: string
            description: >-
              The name of the trading book.
            maxLength: 50
        TradingDesks:
          type: array
          title: TradingDesks
          description: The list of trading desks
          items:
            type: string
            description: >-
              The name of the trading desk.
            maxLength: 50
        BusinessUnits:
          type: array
          title: BusinessUnits
          description: The list of business units
          items:
            type: string
            description: >-
              The name of the trading desk.
            maxLength: 50
        ObservationSchedule:
          type: object
          title: ObservationSchedule
          description: The list of observation dates 
          properties:
            date:
              type: string
              format: date
              description: >-
                The apply (start) date for observation rate. The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-04-30'
            fixingDate:
              type: string
              format: date
              description: >-
                The observation fixing date. The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-04-28'
            spread:
              type: number
              format: double
              description: 'The observation rate spread'
              example: 0.0015
            weight:
              type: integer
              format: int32
              description: 'The number of days the rate will be applicable for'
              example: 3
        InstrumentSchedule:
          type: object
          title: LegSchedule
          description: The financial description of the trade leg schedule.
          properties:
            periodId:
              type: integer
              format: int64
              description: The sequence number of the schedule period.
              example: 1
            periodStart:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-05-03'
            periodEnd:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-06-03'
            fixingDate:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-06-03'
            fxFixingDate:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-06-03'
            payDate:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-06-03'
            paymentType:
              type: string
              enum:
                - interest
                - notional-exchange
                - notional
                - fee
                - interim-interest
                - premium
              description: The payment type for the given period.
            notional:
              type: number
              format: double
              description: The outstanding notional amount for the period.
              example: 100000.00
            notionalChange:
              type: number
              format: double
              description: The installment for the given period
              example: 100.00
            payAmount:
              type: number
              format: double
              description: The fee amount for the given period
              example: 100.00
            rate:
              type: number
              format: double
              description: The rate for the period. It can be positive or negative.
              example: 0.015
            spread:
              type: number
              format: double
              description: The rate spread for the period. It can be positive or negative.
              example: 0.0050
            fxRate:
              type: number
              format: double
              description: The exchange rate for the period.
              example: 1.0111
            observationSchedule:
              type: array
              description: "The observation schedule for the compounded and/or average rates"
              items:
                $ref: '#/components/schemas/ObservationSchedule'
            periodDetail:
              type: object
              description: >-
                The information is used as parameters for calculations.
              additionalProperties:
                type: string
        CouponFormula:
          type: object
          title: CouponFormula
          description: 'The coupon formula thats defines payoff of instrument'
          properties:
            applyDate:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-06-03'
            formula:
              type: string
              description: >-
                The coupon formula that defines payoff of instrument in form of the mathematical expression that combines numbers and variables 
                in a valid way, using operations such as addition, subtraction, multiplication, division, exponentiation, and other operations and
                functions. "[]" identifies the variables such as interest rate, exchange rate ( spotUSD/JPY ) or inflation index. 
                [3mUSDlibor] is the short name and convention in the following pattern - ttCCYindex for interest rate and spotCCY1/CCY2 for exchange rate.'
              maxLength: 256
              example: '0.05*[3mUSDlibor]+0.0002'
        InterestRateInstrument:
          type: object
          title: InterestRateInstrument
          description: The financial description of fixed or floating Interest Rate instrument.
          additionalProperties: true
          required:
            - instrumentType
          properties:
            instrumentType:
              type: string
              description: The type of the instrument
              example: InterestRateInstrument
              maxLength: 50
            instrumentId:
              type: string
              example: '1233344'
              description: Identifier of trade financial instrument
              maxLength: 50
            subType:
              type: string
              description: Type of the interest rate instrument such as non-deliverable swap, cross currency swap, overnight index swap, floating cap floor swaps
              maxLength: 256
            currency:
              type: string
              example: EUR
              description: Trade currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            crossCurrency:
              type: string
              example: USD
              description: Cross/non-deliverable currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            direction:
              type: string
              description: Direction of transaction (Buy or Sell).
              enum:
                - BUY
                - SELL
            effectiveDate:
              type: string
              format: date
              description: >-
                Start date of the instrument. The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            effectiveDateCode:
              type: string
              example: "2D"
              maxLength: 5
              description: Start date of instrument defined as the relative lag, in format [n]Y, [n]M, [n]D or [n]W, to the option expiry date if the option exercise policy is set to bermudan or american. 
            maturityDate:
              type: string
              format: date
              description: >-
                End date of the instrument. The date must be output as a full date formatted
                according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-03-29'
            maturityDateCode:
              type: string
              description: >-
                End date code in format [n]Y, [n]M, [n]D or [n]W or 'open' that defines maturity date of the deal as rolling or/and relative duration.
              example: '3M'
              maxLength: 5
            notional:
              type: number
              format: double
              description: The outstanding notional amount
              example: 100000.00
            fixedRate:
              type: number
              format: double
              description: The fixed interest rate
              example: 0.01
            minRate:
              type: number
              format: double
              description: The floor of the floating interest rate
              example: 0.01
            maxRate:
              type: number
              format: double
              description: The cap of the floating interest rate
              example: 0.01
            index:
              type: string
              description: <-
                The interest rate index name like SOFR, OIS, EONIA. For the fixed instrument to be set to "FIXED"
              example: SOFR
              maxLength: 256
            term:
              type: string
              description: <-
                The term of the floating interest rate underlying.
              example: '1d'
              maxLength: 50
            basis:
              type: string
              description: <-
                Interest day-count convention.
              example: 'A365'
              maxLength: 50
            compoundBasis:
              type: string
              description: <-
                Compound day-count convention.
              example: 'A365'
              maxLength: 50
            compoundFunction:
              type: string
              description: 'The function that applied to observation rates to compute the period rate'
              enum:
                - ois
                - ois-business
                - ois-spread-include
                - weighted
                - simple-average
                - unweighted
                - weighted-business
            compoundApproach:
              type: string
              description: Defines the way the weights are used in the compounding and accrual calculation
              enum:
                - look-back
                - period-shift
            couponFormulas:
              type: array
              description: 'Multi-coupon definition of payoff'
              items: 
                $ref: '#/components/schemas/CouponFormula'
            discountOption:
              type: string
              description: "Option that specifies the convention for discounting the      settlement amount to the payment date for forward trade agreement (FRA). fixed: discount at fixed rate to start of period. dual: fixed interest will be discounted using fixed rate and projected interest will be discounted using floating rate. forward: discount at projected rate. This option is the standard for FRA. ratio alternate discounting convention that factors in the floating and fixed rates when discounting the interest. collateralized convexity: convexity adjustment is calculated during pricing, then it is taken into account when computing the interest. The convexity adjustment is only calculated when the discount is set to collateralized-convexity, the trade has payments in advance, the discount index is different from the projection index, and the start date is after the as of date."
              enum:
                - forward
                - dual
                - ratio
                - fixed
                - collateralized-convexity
            convexityAdjustment:
              type: string
              description: "collateralized forward rate agreement (FRA) convexity adjustment when discount option set to collateralized-convexity"
              enum:
                - shift-log-normal
                - deterministic-spread
                - manual-spread
              example: shift-log-normal
            periodSchedule:
              type: array
              description: Periodic schedule information for the instrument.
              items:
                $ref: '#/components/schemas/InstrumentSchedule'
            instrumentDetails:
              type: object
              description: >-
                The information is used as the additional instrument parameters for calculations.
              additionalProperties:
                type: string
        ForeignExchangeInstrument:
          type: object
          title: ForeignExchangeInstrument
          description: The financial description of foreign exchange instrument.
          additionalProperties: true
          required:
            - instrumentType
          properties:
            instrumentType:
              type: string
              description: The type of the instrument
              example: ForeignExchangeInstrument
              maxLength: 50
            instrumentId:
              type: string
              example: '1233366'
              description: Identifier of trade financial instrument.
              maxLength: 50
            subType:
              type: string
              description: Type of the forex instrument such as non-deliverable forward, timing option, deposit swap
              maxLength: 256
            currency1:
              type: string
              example: EUR
              description: Base (main) currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            currency2:
              type: string
              example: EUR
              description:  Money currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            splitCurrency:
              type: string
              example: EUR
              description: Split currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            direction:
              type: string
              description: Direction of transaction (Buy or Sell).
              enum:
                - BUY
                - SELL
            boughtNearNotional:
              $ref: '#/components/schemas/CurrencyAmount'
            soldNearNotional:
              $ref: '#/components/schemas/CurrencyAmount'
            boughtFarNotional:
              $ref: '#/components/schemas/CurrencyAmount'
            soldFarNotional:
              $ref: '#/components/schemas/CurrencyAmount'
            exchangeRate:
              type: number
              format: double
              description: >-
                Quoted exchange rate of the near leg in format based on currency pair market quota
                (multiplier rate: 1 unit in currencyPair.Currency1 = 1 unit in currencyPair.Currency2 *
                exchangeRate).
              example: 1.121
            farExchangeRate:
              type: number
              format: double
              description: >-
                The agreed upon exchange rate in the Forex Swap contract for the far leg in format based on
                currency pair market quotation (multiplier rate), use this
                field for Forex Forward to indicate forward exchange rate.
              example: 1.121
            nearDeliveryDate:
              type: string
              format: date
              description: >-
                Maturity date of the Forex Swap near leg. The date must be output as a full date formatted
                according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-03-29'
            farDeliveryDate:
              type: string
              format: date
              description: >-
                Maturity date of the Forex Swap far leg, use this field for Forex Forward to indicate forward leg maturity date. The date must be output as a full date formatted
                according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-03-29'
            spotLag:
              type: string
              description: >-
                The Forex spot lag of the quoted currency pair.
              example: '2d'
              maxLength: 50
            spotCalendar:
              type: string
              description: >-
                The calendar to use to calculate Forex spot date.
              maxLength: 50
            timingOption:
              $ref: '#/components/schemas/TimingOption'
            fxEvents:
              type: array
              description: "Forex events such as drawdowns and fx fixings"
              items:
                $ref: '#/components/schemas/FxEvents'
            instrumentDetails:
              type: object
              description: >-
                The information is used as the additional instrument fields for calculations.
              additionalProperties:
                type: string
        OptionInstrument:
          type: object
          title: OptionInstrument
          description: The financial description of Option instrument.
          additionalProperties: true
          required:
            - instrumentType
          properties:
            instrumentType:
              type: string
              description: The type of the instrument
              example: OptionInstrument
              maxLength: 50
            instrumentId:
              type: string
              example: '1233366'
              description: Identifier of trade financial instrument.
              maxLength: 50
            subType:
              type: string
              description: Type of the option instrument
              enum:
                - EUROPEAN
                - BERMUDAN
                - AMERICAN
                - CALLSWAP
            expiryDate:
              type: string
              format: date
              description: >-
                Expiry date of the instrument. The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            firstExpiryDate:
              type: string
              format: date
              description: >-
                The first expiry date for bermudan option, must be output as a full date formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            currency:
              type: string
              example: EUR
              description: Currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            direction:
              type: string
              description: Direction of transaction (Buy or Sell).
              enum:
                - BUY
                - SELL
            callOrPutt:
              type: string
              description: Type of the option (Put or Call).
              enum:
                - CALL
                - PUT
              example: PUT
            calendar:
              type: string
              description: >-
                Option expiry/delivery calendar.
              maxLength: 50
              example: LON
            businessRule:
              type: string
              description: Business rule to compute option expiry/delivery date
              enum:
                - PREVIOUS
                - FOLLOWING
                - MODIFIED-FOLLOWING
                - MODIFIED-PREVIOUS
            strike:
              type: number
              format: double
              description: The strike of the option(interest rate, exchange rate or price)
              example: 0.01
            settlementType:
              type: string
              description: The type of option settlement in case of exercise
              enum:
                - CASH
                - PHYSICAL
                - DISCOUNT
              example: CASH
            settlementCalendar:
              type: string
              description: >-
                The calendar to compute option settlement date.
              maxLength: 50
              example: NY
            settlementBusinessRule:
              type: string
              description: Business rule to compute option settlement date
              enum:
                - PREVIOUS
                - FOLLOWING
                - MODIFIED-FOLLOWING
                - MODIFIED-PREVIOUS
              example: FOLLOWING
            settlementDate:
              type: string
              format: date
              description: >-
                settlement date of the instrument. The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            callSchedule:
              type: array
              description: the callable puttable events schedule
              items:
                $ref: '#/components/schemas/CallSchedule'
            feePayments:
              type: array
              description: the option fees such as premium
              items:
                $ref: '#/components/schemas/FeePayments'
            barrier:
              $ref: '#/components/schemas/Barrier'
            digital:
              $ref: '#/components/schemas/Digital'
            instrumentDetails:
              type: object
              description: >-
                The information is used as the additional instrument fields for calculations.
              additionalProperties:
                type: string
        Barrier:
          type: object
          title: Barrier
          description: Definition of the barrier or touch option
          properties:
            barrierRanges:
              type: array
              description: the barrier ranges for the single, double and touch option
              items:
                $ref: '#/components/schemas/BarrierRange'
            barrierType:
              type: string
              description: The flag that indicate the direction for the barrier cross - up or down
              enum: 
                - up-in
                - up-out
                - down-in
                - down-out
            touchType:
              type: string
              description: The flag that defines touch type as no, one or instant touch
              enum: 
                - no-touch
                - one-touch
                - instant-touch
        Digital:
          type: object
          title: Digital
          description: Definition of the digital option
          properties:
            digitalRanges:
              type: array
              description: the digital ranges for the digital  double and touch option
              items:
                $ref: '#/components/schemas/DigitalRange'
            payoffCurrency:
              type: string
              example: EUR
              description: Currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
        CallSchedule:
          type: object
          title: CallSchedule
          description: Option callable/puttable exercised schedule
          properties:
            expiryDate:
              type: string
              format: date
              description: >-
                Expiry date of the instrument. The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            noticeDate:
              type: string
              format: date
              description: >-
                The  date must be output as a full date formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            eventType:
              type: string
              description: Type of the event (Put or Call).
              enum:
                - CALL
                - PUT
            feeRate:
              type: number
              format: double
              description: The fee(%) paid in case of call/put event exercised
              example: 0.015
        FeePayments:
          type: object
          title: FeePayments
          description: Option fee payments
          properties:
            paymentDate:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            feeType:
              type: string
              description: Type of the fee.
              example: PREMIUM
              maxLength: 25
            amount:
              type: number
              format: double
              description: The fee amount
              example: 0.015
            currency:
              type: string
              example: EUR
              description: Currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
        FxEvents:
          type: object
          title: FxEvents
          description: Forex instrument events
          properties:
            paymentDate:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            fxFixing:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            referenceSource:
              type: string
              description: Type publish source for exchange rate
              example: FXFX
              maxLength: 50
            fxEventType:
              type: string
              description: Type of the event such as fx rate, notional exchange or floating notional
              example: FRN
              maxLength: 25
            exchageRate:
              type: number
              format: double
              description: >-
                The agreed upon exchange rate in the non deliverable forward contract in format based on
                currency pair market quotation (multiplier rate), use this
                field for Forex Forward to indicate forward exchange rate.
              example: 1.121
            amount1:
              type: number
              format: double
              description: The amount in currency1
              example: 0.015
            amount2:
              type: number
              format: double
              description: The amount in currency1
              example: 0.015
            currency1:
              type: string
              example: EUR
              description: Currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            currency2:
              type: string
              example: EUR
              description: Currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            isNDFTimeOptionRemainingEvent:
              type: boolean
              example: true
              description: Flag that defines if the amount is a remaining drawdown for timing option
        TimingOption:
          type: object
          title: TimingOption
          description: The definition of forex drawdawn timing option
          properties:
            startDate:
              type: string
              format: date
              description: >-
                A drawdown start sate to indicate that the drawdown can occur on any business day on or after the start sate, and, on or before the end date. Also, this date must fall between the spot date and the trade maturity date.The date must be output as a full date formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2019-03-29'
            direction:
              type: string
              description: Direction of drawdown (Buy or Sell).
              enum:
                - BUY
                - SELL
            pricingScenario:
              type: string
              description:  Defines if the option to be priced based Time Option Worst Case Scenario or Time Option Best Case Scenario
              enum:
                - BEST-CASE
                - WORST-CASE
            assumedDeliveryType:
              type: string
              description: Time option trades are priced like a regular FX Forward with a fixed settlement date. The settlement date chosen is either the drawdown start date (asOfDate if it has already past the drawdown start date), or the drawdown end date. This choice is set at the beginning of the trade and saved with the trade for future pricing purposes.
              enum:
                - NEAR
                - FAR
        FxOptionInstrument:
          type: object
          title: FxOptionInstrument
          description: The financial description of FX option instrument.
          additionalProperties: true
          required:
            - instrumentType
          properties:
            instrumentType:
              type: string
              description: The type of the instrument
              example: ForeignExchangeInstrument
              maxLength: 50
            instrumentId:
              type: string
              example: '1233366'
              description: Identifier of trade financial instrument.
              maxLength: 50
            subType:
              type: string
              description: Type of the forex instrument such as vanilla, digital, single barrier, double barrier, touch
              maxLength: 256
            currency1:
              type: string
              example: EUR
              description: Base (main) currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            currency2:
              type: string
              example: EUR
              description:  Money currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            currency1Notional:
              $ref: '#/components/schemas/CurrencyAmount'
            currency2Notional:
              $ref: '#/components/schemas/CurrencyAmount'
            referenceSource:
              type: string
              description: Type publish source for exchange rate
              example: FXFX
              maxLength: 50
            exchange:
              type: string
              description: The public exchange where option is traded
              example: FXFX
              maxLength: 50
            valuationDate:
              type: string
              format: date
              description: >-
                The valuation date of the option underlying forex instrument. The date must be output as a full date formatted
                according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-03-29'
            isDeliverable:
              type: boolean
              description: The flag indicates if set to 'false' that there is an option to enter in non-deliverable forward transaction at pre-defined time(s)
            ndDate:
              type: string
              format: date
              description: The fixing date for non-delivarable exchange rate. The date must be output as a full date formatted
                according to ISO 8601 standards (yyyy-mm-dd).
            ndExchangeRate:
              type: number
              format: double
              description: >-
                Quoted exchange rate in format based on currency pair market quota (multiplier rate: 1 unit in currencyPair.Currency1 = 1 unit in currencyPair.Currency2 *
                exchangeRate).  
            isQuanto:
              type: boolean
              description: The flag that indicates if set to "true" that underlying forex instrument is denominated in the currency that is different from option currency. Both the strike price and underlying forex instrument are valued in the foreign currency. At the time of exercise, calculation of the option's intrinsic value is in the foreign currency. This foreign currency value is converted to the investor's domestic currency at the fixed exchange rate. 
            quantoCurrency:
              type: string
              example: EUR
              description: Quanto currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
            quantoExchangeRate:
              type: number
              format: double
              description: >-
                Quoted quanto fixed exchange rate in format based on currency pair market quota
                (multiplier rate: 1 unit in currencyPair.Currency1 = 1 unit in currencyPair.Currency2 *
                exchangeRate).
            fxEvents:
              type: array
              description: "Forex option events such as notional amount in the case of termination"
              items:
                $ref: '#/components/schemas/FxEvents'
            instrumentDetails:
              type: object
              description: >-
                The information is used as the additional instrument fields for calculations.
              additionalProperties:
                type: string
        BarrierRange:
          type: object
          title: BarrierRange
          description: The definition of the barrier range
          properties:
            rangeStart:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-05-03'
            rangeEnd:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-06-03'
            upperBarrier:
              $ref: '#/components/schemas/BarrierLevel'
            lowerBarrier: 
              $ref: '#/components/schemas/BarrierLevel'
        BarrierLevel:
          type: object
          title: BarrierLevel
          description: The definition of the barrier level
          properties:
            barrierLevel:
              type: number
              format: double
              description: The barrier level
              example: 0.015
            decay: 
              type: number
              format: double
              description: The barrier level
              example: 0.015
            crossDate: 
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-05-03'
            referenceRate:
              type: number
              format: double
              description: The reference rate
              example: 0.015
            knockType:
              type: string
              description: The flat indicates if barrier is knock in or knock out
              enum:
                - knock-in
                - knock-out
            referenceSource:
              type: string
              description: The name of the reference fixing source for the barrier reference rate
              example: FXFX
              maxLength: 50
            calendar: 
              type: string
              description: The calendar for the barrier level
              maxLength: 50
              example: NYC
            rebate:
              $ref: '#/components/schemas/Rebate'
        Rebate:
          type: object
          title: Rebate
          description: Definition of the rebate for barrier option
          properties:
            rebateType:
              type: string
              description: the flag indicates when the rebate will be set  - instant at the barrier cross date or at expiry
              enum:
                - instant
                - expiry
            amount:
              type: number
              format: double
              description: digital payoff amount
              example: 1000
            currency:
              type: string
              example: EUR
              description: Currency in format of ISO 4217.
              pattern: "[A-Z]{3,3}"
        DigitalRange:
          type: object
          title: DigitalRange
          description: Definition of the range for digital option
          properties:
            rangeStart:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-05-03'
            rangeEnd:
              type: string
              format: date
              description: >-
                The date must be output as a full date
                formatted according to ISO 8601 standards (yyyy-mm-dd).
              example: '2020-06-03'
            amount:
              type: number
              format: double
              description: digital payoff amount
              example: 1000
        TradeDetails:
          type: object
          title: TradeDetails
          description: Detailed version of the trade data.
          additionalProperties: true
          properties:
            tradeId:
              type: string
              description: The reference identifier of the trade.
              example: '500560B'
              maxLength: 256
            tradeType:
              type: string
              example: SWAP
              description: Financial type of the deal.
              maxLength: 50
            tradeStatus:
              type: string
              example: PRE-TRADE
              description: Status of the deal such as verified, done, pre-trade, pre-deal.
              maxLength: 50
            legalEntityId:
              type: string
              description: >-
                Identifier of the legal entity, institution/business that owns the
                transactions.
              example: 0010107588B
              maxLength: 256
            counterpartyId:
              type: string
              description: Identifier of the counterparty with which the trade is executed.
              example: 0010107588B
              maxLength: 256
            collateralCurrency:
              type: string
              example: EUR
              description: Collateral currency in format ISO 4217.
              pattern: "[A-Z]{0,3}"
            csaId:
              type: string
              description: Identifier of the counterparty CSA.
              example: 0010107588B_CSA
              maxLength: 256
            tradingBookName:
              $ref: '#/components/schemas/TradingBook'
            nettingSetId:
              type: string
              description: Identifier of Netting set.
              example: 'Netting Set 1'
              maxLength: 256
            tradeLegs:
              type: array
              description: The definition of trade financials by leg.
              items:
                oneOf:
                  - $ref: '#/components/schemas/InterestRateInstrument'
                  - $ref: '#/components/schemas/ForeignExchangeInstrument'
                  - $ref: '#/components/schemas/FxOptionInstrument'
                  - $ref: '#/components/schemas/OptionInstrument'
                discriminator:
                  propertyName: instrumentType
          example:
            tradeId: '500560B'
            tradeType: SWAP
            tradeStatus: PRE-DEAL
            collateralCurrency: EUR
            legalEntityId: LE_0010107588B
            counterpartyId: 0010107588B
            csaId: 0010107588B_csa_11233,
            tradingBook: {
              businessUnit: 'FINASTRA',
              desk: 'LONDON',
              book: 'SWAPS' }
            nettingSetId: 'CPTY_001 Netting Set'
            tradeLegs: [
              {
                instrumentType: 'InterestRateInstrument',
                instrumentId: '1223344',
                direction: BUY,
                effectiveDate: '2019-03-29',
                maturityDate: '2020-03-29',
                notional: 100000.00,
                currency: 'EUR',
                index: 'FIXED',
                fixedRate: 0.0122,
                basis: 'A365',
                periodSchedule: [
                  {
                    periodStart: '2020-05-01',
                    periodEnd: '2020-08-01',
                    fixingDate: '2020-04-29',
                    paymentType: 'interest',
                    notional: 100000.00,
                    notionalChange: 0.0,
                    rate: 0.0122,
                    spread: 0.0,
                    payDate: '2020-08-01',
                  periodDetails: {}}],
                instrumentDetails: {}
              },
              {
                instrumentType: 'InterestRateInstrument',
                instrumentId: '12236666',
                direction: SELL,
                effectiveDate: '2019-03-29',
                maturityDate: '2020-03-29',
                notional: 100000.00,
                currency: 'EUR',
                index: 'EURIB',
                term: '6m',
                basis: 'A365',
                periodSchedule: [
                  {
                    periodStart: '2020-05-01',
                    periodEnd: '2020-08-01',
                    fixingDate: '2020-04-29',
                    paymentType: 'interest',
                    notional: 100000.00,
                    notionalChange: 0.0,
                    rate: 0.0,
                    spread: 0.0004,
                    payDate: '2020-08-01',
                  periodDetails: {}
                  }],
                instrumentDetails: {}
              } ]
        TradeSummaries:
          type: object
          title: TradeSummaries
          description: List of trades with compact description.
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/TradeDetails'
        Error:
          title: Error
          type: object
          description: Used as a standard error message structure that complies with RFC7807
          properties:
            type:
              type: string
              description: 'A URI reference [RFC3986] that identifies the problem type'
              example: 'https://api.finastra.com/validation-error'
              maxLength: 256
            title:
              type: string
              description: A short human-readable summary of the problem type
              example: The request is invalid
              maxLength: 256
            status:
              type: integer
              format: int32
              description: >-
                The HTTP status code generated by the origin server for this
                occurrence of the problem
              example: 400
            detail:
              type: string
              description: >-
                A human-readable explanation specific to this occurrence of the
                problem
              example: The counterparty does not exist
              maxLength: 256
            causes:
              type: array
              items:
                $ref: '#/components/schemas/Causes'
              description: An optional array of additional causes associated with the error
              example: []
        Causes:
          title: Causes
          type: object
          description: >-
            Used to define additional causes associated with the error when the
            associated error message does not provide sufficient clarity on
            remediation of the error
          properties:
            title:
              type: string
              description: >-
                A short human-readable summary of the problem associated with this
                cause of the error
              maxLength: 256
            detail:
              type: string
              description: >-
                A human-readable comment or note associated with this cause of the
                error
              maxLength: 256
            field:
              type: string
              description: The field associated with this cause of the error
              maxLength: 256
            fieldValue:
              type: string
              description: The value of the field associated with this cause of the error
              maxLength: 256
